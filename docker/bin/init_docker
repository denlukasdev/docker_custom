#!/bin/bash
set -e

# Location of current file
initLocation=$PWD/$(dirname "$0")

# Env data file
envData="$initLocation/../init_env"

# Save default IFS variable
IFS_SAVE=$IFS

# Included functions
source "$initLocation/functions"

# Check is init_env file exists
if [ ! -f "$envData" ]; then
  echo "Please copy 'init_env.sample' as 'init_env' and set variables"
  exit
fi

# list of folders related to docker directory
dirList="
$initLocation/../../server
$initLocation/../config
$initLocation/../config/mysql
$initLocation/../config/nginx
$initLocation/../config/php
$initLocation/../images
$initLocation/../images/mysql
$initLocation/../images/php
"

# list of variable files
fileList="
$initLocation/indoc
$initLocation/dump_setup
$initLocation/../config/nginx/app.conf
$initLocation/../config/mysql/db.env
$initLocation/../images/mysql/init_db.sql
$initLocation/../images/php/Dockerfile
$initLocation/../docker-compose.yml
"

# Create folders if doesn't exists loop
for dirPath in $dirList; do
  createDir "$dirPath"
done

# Copy sample files and replace variables
IFS=$'\n'
for filePath in $fileList; do
  # Get file name from file path
  filename=$(basename "$filePath")
  # Copy sample file
  copySample "$initLocation/samples/$filename.sample" "$filePath"
  # Replace variables in file loop
  for row in $(cat "$envData"); do
    # Exclude comments
    if [ "${row:0:1}" == '#' ]; then
      continue
    fi
    # Variable row to array
    IFS="=" read -a var <<<"$row"
    # Check is file contain variable
    if grep -q "${var[0]}" "$filePath"; then
      # Replace variable
      replaceStr "${var[0]}" "${var[1]}" "$filePath"
    fi
  done
done
IFS="$IFS_SAVE"
chmod 755 $initLocation/*
